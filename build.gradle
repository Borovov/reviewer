plugins {
	id 'java'
	id 'org.openapi.generator' version '7.0.1'
	alias(libs.plugins.springBoot)
	alias(libs.plugins.springDM)
	alias(libs.plugins.lombok)
}

group = 'com.criticaster'
version = '0.0.1-SNAPSHOT'

java {
	toolchain {
		languageVersion = JavaLanguageVersion.of(17)
	}
}

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
}

repositories {
	mavenCentral()
}

dependencies {
	implementation libs.postgresql
	implementation libs.liquibase
	implementation libs.preliquibase
	implementation libs.mapstruct
	implementation libs.openapi
	implementation libs.openapiUI
	implementation 'org.springframework.boot:spring-boot-starter-web'
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	implementation 'org.springframework.boot:spring-boot-starter-oauth2-resource-server'
	implementation 'org.springframework.boot:spring-boot-starter-security'

	compileOnly 'org.projectlombok:lombok'

	annotationProcessor libs.lombokMapstructBinding
	annotationProcessor libs.mapstructProcessor

	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	testImplementation 'org.springframework.security:spring-security-test'
	testRuntimeOnly 'org.junit.platform:junit-platform-launcher'
}

openApiGenerate {
	generatorName = "spring"
	inputSpec = "$rootDir/src/main/resources/openapi/openapi.yaml"
	outputDir = "$buildDir/generated"
	apiPackage = "com.criticaster.api"
	modelPackage = "com.criticaster.model"
	configOptions = [
			dateLibrary: "java17",
			interfaceOnly: "true"
	]
}

tasks.named('test') {
	useJUnitPlatform()
}
